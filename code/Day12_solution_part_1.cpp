#include <array>
#include <exception>
#include <fstream>
#include <functional>
#include <iostream>
#include <iterator>
#include <limits>
#include <list>
#include <map>
#include <memory>
#include <numeric>
#include <sstream>
#include <string>
#include <string_view>
#include <unordered_set>
#include <vector>

namespace{

constexpr std::string_view Input =

false ?

"???.### 1,1,3\n"
".??..??...?##. 1,1,3\n"
"?#?#?#?#?#?#?#? 1,3,1,6\n"
"????.#...#... 4,1,1\n"
"????.######..#####. 1,6,5\n"
"?###???????? 3,2,1\n"

:

"??#??#????## 2,7\n"
"..?##????????.?#?.? 10,2\n"
"#??.???..? 1,1,1\n"
"#??.#??.??#?#????#?# 2,1,6,3\n"
"?.#??.????..?.??? 1,2\n"
"#???##?.???#? 2,3,5\n"
"?##??#????.??. 2,3,2\n"
"??.#??#?????##? 2,1,3,4\n"
"?#????#?#.. 2,1,3\n"
"?#???#???##?#??? 2,11\n"
"#?##??.#??#?? 6,2,1\n"
"#.?#????#?#.?? 1,2,5,2\n"
"????#?#?#???? 1,6,1,1\n"
".?????.??? 2,1\n"
"????????.?#.??? 5,1,1,1\n"
"????..???????.??? 1,1\n"
"?#???#??#??.????.# 11,1,1,1\n"
"???.#?.???#? 2,2,2\n"
"???.???.????##? 1,5\n"
"??#?#???.#??????#??? 1,5,3,3\n"
"???.???.????. 1,2,1,1\n"
"????#?...????. 4,1\n"
"?.????#??#? 1,7\n"
".?#?.?.##?.?????? 1,3,2,2\n"
"????.?????##?.# 3,8,1\n"
"????#..????? 1,1,3\n"
".?#???.#????. 1,2,1,2\n"
"????.??###.#??.??? 1,1,4,3,1\n"
"?????????? 1,1,1\n"
"?#.??#...???? 2,1,1\n"
"?#????#?????? 7,3\n"
"?????.#####??? 1,6\n"
"?..?##.#?????? 1,2,4\n"
"#??#?#???????????#? 1,4,1,4,1,1\n"
"??#??###.???#??. 3,3,3\n"
"??????.?#??.?? 3,2\n"
"?#???#??#??..?# 6,1,2\n"
"#.??.??##?????#?? 1,1,10\n"
".?#???#?.? 2,4\n"
"???..????## 2,1,2\n"
"??????????????? 1,3,1\n"
"??##???????### 1,6,4\n"
"?#??????.??? 2,1\n"
"??#??????#???? 5,2,2\n"
"?#.??#???#?? 2,2,1,1\n"
"??#?????#???????. 2,1,1,4\n"
"?#?##??#?.. 4,3\n"
"##?????#??.??? 9,1,1\n"
"??.?...????#???#? 2,9\n"
"?????????.? 3,1\n"
".???.??#?.????? 2,4,1\n"
"#?##.?#?#????? 4,1,6\n"
"????#??#?#??? 1,8\n"
".??.?.###?????? 1,7\n"
"??##????#. 4,1,2\n"
"???#?.???. 2,1\n"
".?##?##?#?.?#????# 7,3,3\n"
"#????..####??.#? 2,1,4,1,1\n"
"#..#?#?????#??? 1,9\n"
"#.??????.?#??#..???# 1,6,1,1,1,1\n"
"???????##?#???#.??? 1,1,5,2,2\n"
"?#????.???#? 5,3\n"
"#.?#?##??????#?#?? 1,14\n"
".????..?.#???#. 1,1,1,2,1\n"
"?#????#???.#????? 8,1,2\n"
"????#?.??#??????. 1,3,7\n"
"??.??.?.???? 1,1,1,1\n"
"??#????..??? 2,1,1,2\n"
"?.??#??#??#?.?.???# 10,2\n"
".?#.??#??.? 1,5\n"
"?.##????????##?? 4,1,3\n"
".?.??##?#??? 1,6\n"
"?????#.??? 1,1,1\n"
".#?#???#???? 4,3,1\n"
"????#??.??????? 1,3,1,1,1\n"
"???#?.??#?##?# 3,7\n"
"?#?#?#???????? 8,1\n"
"??.?#????? 1,2\n"
"?#???#????.??????? 1,1,3,1,1,1\n"
"##???.???.? 3,3\n"
"####???????.???? 4,3,1\n"
"??#?##??????? 6,3\n"
"?..??????? 3,2\n"
".?#??###????#? 8,3\n"
"##?###????? 8,1\n"
"?.?#?????###??.??#?? 10,1\n"
"??????#?????? 3,1,1,1\n"
".#???#?#?.?????? 1,5,1,2,1\n"
"???.#???#.??#?#?. 1,2,2,5\n"
"..???#????### 1,2,4\n"
"????#???#????. 1,7,1\n"
"??????#????#.? 3,7,1\n"
"???#???????#?...? 4,5,1\n"
"#????????##?# 1,3,4\n"
"?.#???.???#??. 3,4\n"
".???????.??????.? 4,2,1,3\n"
".?.??.???? 2,2\n"
".???.??????###?#. 3,10\n"
"????..?????## 2,1,2,4\n"
"#?.???#??.??? 1,4,1\n"
"?????..???? 1,4\n"
"??????#.????????? 3,1,8\n"
"????#??????? 5,1,1,1\n"
"????#?#??#????? 1,4,1,2,1\n"
"?#?.???#???.? 2,6,1\n"
"?.???#??.?#. 1,1,1,1\n"
"??.#.#.??????#???? 1,1,1,10\n"
".##?.?????.. 2,2,1\n"
"???#?#??#??#??#? 5,1,1,1\n"
"?#.?.????????????#? 1,1,10\n"
"??#?????.. 3,1\n"
"?#.?#?#?????.?????? 1,2,3,1,4,1\n"
"?#???..#?.??#?#. 2,1,2,1,1\n"
".????#????.?#?????# 7,1,3\n"
"..###??#???#???.??? 10,1,1\n"
"??????##?.?#?#.#??# 4,3,2,1,2,1\n"
"?.???####.?#?? 4,2\n"
"?#.???#???#??##?#?? 1,15\n"
"?.?##?#?#? 5,2\n"
"?#???#?#??????##??? 9,3\n"
".??????????.??. 6,3,1\n"
"???????.#? 1,2,1\n"
"????#?#??#?#.. 5,6\n"
"?????.?.?#????? 2,1,5\n"
"????..??#?#?#??.???? 3,8\n"
"#???.?.??????. 1,2,1,2\n"
"?????????.???????.?. 1,2,3,4,1\n"
"????????##???? 1,7\n"
"?.??#.?#??#? 1,1,5\n"
"#??????#?##??? 3,9\n"
"???#??.?.#?#??### 4,8\n"
"?.##??##?#??? 2,7\n"
".?.#?#?????.#?#??.? 1,8,1,1,1,1\n"
"?.???#.?????? 2,2\n"
".#.??##???.#??.??. 1,5,3,1\n"
"??#???##?? 1,1,4\n"
"??????#??##?#. 2,8,1\n"
"????#?????.???.?.? 6,1,3\n"
".?.#.?##.??.????#? 1,1,2,2,2,2\n"
".??#?.???? 4,1,1\n"
"?.?#?##??##?#??.?? 2,8,1,1\n"
"#???##???.??. 1,2,1,1\n"
"?#???##??.??#??? 3,3,5\n"
".???#??#??? 1,5,1\n"
"?#.?????#???. 2,7\n"
"?.???#????????.?. 1,1,1,4,1\n"
"??#??#.??#??? 4,1,2\n"
"???#.????#???##???? 2,12\n"
"..??????.??#??#?? 2,6\n"
"??#?.?#?#???..??#?? 3,4,1,1,2\n"
"?#????.#?????#?. 2,3,3,3\n"
"?????#????.? 2,3,1\n"
".?.?????.?.##.? 5,2\n"
".???.???.???#?? 1,2,3\n"
".????.?#?#???.??. 1,7,2\n"
"???#???#??????.. 1,9,1\n"
".#???#?.?? 1,2\n"
"##?#??#?##??????#??# 2,7,8\n"
"?.?????#????##??.?? 1,8,2,1\n"
"??????#.##??##?##?## 3,1,9,2\n"
"???#?#?#???#? 1,7,1\n"
"???#????.?????? 6,1,1\n"
"?.##?#.?#?.?. 1,2,1,2\n"
".????.?..?????? 1,2,1,3,1\n"
"?.??????.. 1,1\n"
".?????.?#??. 1,4\n"
"???.??????... 2,1\n"
"?#?#?#?#.?..#..??? 6,1,1,1,1,1\n"
".??..?#???? 2,1,1\n"
"??#?????????#?..??? 10,2,1\n"
"?.???.?.?.?.#? 1,2,1,2\n"
"#?.?#?.?#???.??????# 2,2,2,1,2,2\n"
"????..??####???#?? 4,1,10\n"
".????..??#?? 1,3\n"
".#??#?#?.?.##. 6,2\n"
"??#?#..?.??#?#??# 2,1,1,5,1\n"
"??##??#??###??..??? 3,7,1,1\n"
"????.#.???..??. 1,1,1,1,2\n"
"#?.??..??. 1,1,1\n"
".#??????#?.????? 1,5,3,1\n"
"?.???#?..??#??? 4,4\n"
"?????##?#..#???#?? 7,1,1,1,1,1\n"
"?????????? 5,2\n"
"????.????.?#?.. 1,1,3\n"
"????????????#????#? 4,2,5,4\n"
"???#???.??##? 1,1,1,5\n"
"?##????????#????##?. 2,7,3\n"
"???..??#?? 2,3\n"
"#.?#?.???..?? 1,3,3,1\n"
".????????? 2,1,1\n"
"???????????##? 6,1,2\n"
"?..#????#?? 2,3\n"
"????.??..#? 3,1,2\n"
".#.?????#.?#?? 1,2,1,3\n"
"????????.?# 7,1\n"
"?????#?#??##??#???? 15,2\n"
"?#.??.?????#?? 1,1,7\n"
"??????#????#?#????? 8,1,7\n"
"#..????#???. 1,4,1\n"
"##??#.??????. 2,1,2,2\n"
".????.#?#####?. 1,1,7\n"
"#????#???..?????? 9,4\n"
"???#??.#?.# 3,1,1\n"
".?#?#.?..???? 4,2\n"
"??...??.?#?##??? 1,2,8\n"
"?.??#?????..???.?.? 5,1,1\n"
"?.?##??.?#?##????# 5,5,3\n"
"??#?????##??????? 9,1\n"
"???#????#? 1,2,2\n"
"?.?????????#?#?.?#? 1,3,7,2\n"
"???.?#??##?#?? 1,1,5,2\n"
"?????.#.?? 3,1,1\n"
"?#???#???..??.##??? 2,6,1,5\n"
"#??#????????? 2,1,3,1\n"
".#??.?.??.?#. 2,2,1\n"
".???#???????#??##??? 12,2,2\n"
"##?#?#???###???????? 13,1,1,1\n"
".?#.??##?????.? 1,3,2,1\n"
"#????.???#????. 1,1,3,2\n"
"##????????? 2,1,2\n"
"?#?..?#????.??? 3,6\n"
".?..??.??#??#?#? 1,1,7\n"
"?????????.???.? 1,1,1,2,1\n"
"??.????#.???? 1,1,1,2\n"
"###?##.??? 6,2\n"
".?#####???????.#??? 5,6,4\n"
".???.??????????? 1,2,1,1,2\n"
"?????#?#?#.??#??? 6,1,1,2,1\n"
"??.??#???.. 2,1,1\n"
"#..?.?.##??. 1,1,3\n"
"?##???.?.? 4,1,1\n"
"????????##??????.??# 1,10,1,1,1\n"
"???#.???.?????? 1,2,1,2,2\n"
"????????????.????#? 1,3,3\n"
".?.?????..?#?? 1,1,1,3\n"
"?..???##????##? 1,9\n"
".??????#??? 1,2,5\n"
".#?????.?..#???## 1,3,1,1,3\n"
"#????.???.? 5,1,1\n"
".?#.?????#??##??? 1,12\n"
"???.?#???.?#?? 2,4,4\n"
"?.?.??????.?????#?? 1,5,8\n"
"???##?#?#?.#. 4,4,1\n"
".#.???.????#????? 1,6\n"
"??#?##???#??.????? 9,2\n"
"?.?.###??##?#?? 1,11\n"
"???.?.???.? 1,1,2\n"
".?#?????#? 3,2\n"
"?.??#??#???#?#?## 8,6\n"
"???###.?????????? 4,6,1\n"
"?.???#???#?## 1,2,2,4\n"
"??##??????..???#?? 1,3,3,1,1\n"
".??.#?????#???..?? 1,9,1\n"
"...??????? 2,1\n"
"???.?###??.????? 3,3,1,1,1\n"
"??.?#?..???#????. 2,1,1,3,1\n"
"??????..#???.#. 1,4,2,1,1\n"
"?.??##?#???##?..???. 11,3\n"
"???##?.?##??? 5,4\n"
"????.??#?????? 3,7\n"
"#??#..?#???#?.? 1,1,2,3,1\n"
"????##?#???.?#?# 2,6,4\n"
"?#???.##????.? 3,6\n"
".?#????.#????.?.#? 4,1,1,1,2\n"
".??##?#.????#.. 6,3\n"
".#?#??..?? 3,1\n"
"#.?.??..??.?? 1,2,1,1\n"
".?????????#???#????? 1,10\n"
"?#.#..#?#?#?#????#?? 2,1,3,1,8\n"
"??????#????# 6,3\n"
"??????..#??#?. 1,1,3\n"
"?.??#.??????#?. 1,1,3,1,2\n"
"???..##.??##?.????? 1,2,5,2\n"
"??????..???# 2,2,1\n"
"?????#?.????..?#??#? 4,3,2,3\n"
".??#??????????#??? 11,2,1\n"
"??.??..?????.?? 1,1,5,1\n"
"#?###?.????????##?? 1,4,9\n"
".?#?#???#??.# 9,1\n"
"?????#.??#??#. 1,3,3,1\n"
"????#???#??#?.?????. 6,1,2,5\n"
"????????.##?# 1,1,2,1\n"
"??#?##??????? 8,2\n"
"???.???#?#????#??. 1,1,6,2,1\n"
"#??.#??????#? 2,1,3,1\n"
".###??.??.? 4,2\n"
"?????.??#. 3,1\n"
"??????.#..?# 4,1,1,1\n"
"?.#??#?.??##?##???? 4,8\n"
"??????#?#???? 2,6,1\n"
"???..###???..??????? 1,1,4,1,2,1\n"
"??..?.???#?? 1,1,1,3\n"
".??#?#????.?.#??#??? 3,1,5\n"
"??????.??? 1,1,3\n"
"#?.???#??.??#?. 2,5,3\n"
"??#??##??.? 6,1\n"
"?#?????????#?? 1,10\n"
".????#.??? 4,1\n"
".?###?..?#?#??? 5,5,1\n"
"??#??#.?#????.?. 1,1,1,3,1\n"
".???#???#???????? 1,9,1\n"
"???..?????? 1,2\n"
"??#?.#??##?. 3,2,2\n"
"?#?#????.?? 4,2\n"
"??#????.##??? 6,4\n"
"???#.??.?#?###?.#?? 2,1,6,3\n"
"???.?#?##?.? 1,5\n"
"?#.?##?.?? 1,4\n"
"????###??? 1,4\n"
"???##????#?# 1,3,1,3\n"
"##???????? 6,2\n"
"????#??.####?.? 2,2,1,4,1\n"
"#.??#????#???.???? 1,11,1,1\n"
"?#??????.? 1,1,1\n"
"#..?.?#?.??###??.? 1,1,3,5,1,1\n"
"???.??#??#?#?##?? 1,12\n"
"??????#??#?##?? 1,2,7\n"
"???#???.??.???#? 4,1,5\n"
"?????#?????#.?#?#??? 3,1,1,2,5\n"
"#??.????#? 3,1,3\n"
"???????????...# 8,1\n"
"#??#.#.?..????.? 1,1,1,1,4\n"
"?#????.??.?. 1,1,2,1\n"
"?.??##?.?.???#????.. 5,5\n"
"?#??#????.##.## 2,2,2,2,2\n"
"?.#????.?? 2,1,1\n"
".#??????????? 1,6\n"
"??#.??.#????.??#.??. 2,2,1,1,3,2\n"
"??#?#??.??#??? 5,1,2\n"
"???#?#??.???.??? 6,2,1\n"
".??#????...?????#.? 6,1,2,1\n"
"??.???????.?#??? 2,2,1,4\n"
".?.??????? 1,1,1\n"
".????..??#?#? 2,5\n"
"?.?#?##.???.?#??# 1,5,2,1,1\n"
".#??#?.??#?#??.?#??? 2,1,1,5,2,1\n"
"?.#??..????#?????#.? 2,10\n"
"???#???.?#.???????? 6,1,1,3\n"
"?.??#?###??.??##???? 1,8,4,1,1\n"
"?????#.??##? 1,2,1,2\n"
"..??.##.?.???# 1,2,3\n"
"??#?.????#???????? 2,10\n"
"?#??????#??.????? 7,1,1,1\n"
"#???.?#?.???.??#?? 1,1,2,1,1,5\n"
"??##????.#.#?.#?. 6,1,1,1\n"
"?#???#??????????.?.? 1,11,1\n"
"??#????#???#???. 3,1,8\n"
"?#???????.#??? 2,1,2,1\n"
"?.#???????.?? 1,1,2\n"
"???.????#????#???#? 3,1,4,4,2\n"
"????.#??##???#?.### 1,1,6,2,3\n"
"??????.?#?#?#?? 2,1,8\n"
".??????.#? 3,1\n"
"#??????.????#.????? 1,1,1,2,1,4\n"
"???????????????.??# 1,1,7,2\n"
"#??.????#?#??.??#?#? 1,7,6\n"
"??#?????????## 5,4\n"
"????.??#?.. 1,2,4\n"
"#?#??.#?#.?? 1,2,3,2\n"
"..?#?#?.?#??????#?? 3,1,7\n"
".?????#??###..?#?? 1,6,3\n"
"?.#?#????.????###. 1,5,1,1,1,3\n"
"?????####?##?.#.??? 10,1,1\n"
".?##???###???. 3,1,6\n"
".??#.?.???.?.?.?? 1,2,1,1\n"
"?#????.???.?? 6,1,1\n"
"??#.?????#? 1,1,2\n"
".??#?.?.#????? 3,1,1,1\n"
"??.?????????# 1,3,1,1\n"
"?#.#?????.?????? 2,1,1,5\n"
".????#??..????#? 1,1,3,4\n"
"?????..#?.#??# 4,1,4\n"
"??.????##?..?#?? 1,2,3,2\n"
"???##??.#?##???? 1,2,1,5,2\n"
"??#???????#???#? 4,8\n"
"#?#??#.???????#?. 4,1,2,1,2\n"
"?????#?#??.??.??? 1,5,2,2\n"
"?#???#???.? 1,2,1\n"
"????.?##??#???#??##? 3,7,5\n"
"#?????#?.#? 1,3,2\n"
".??#?####?##?#??? 11,1,1\n"
"####??#.###.??.?? 4,2,3,2,1\n"
"#???.??#?#??# 1,1,5,1\n"
"?##.?????. 3,2\n"
".?.????????#? 1,2,2,3\n"
"??????#??.??#?#?.? 8,5\n"
"??.?...?..?.??.?.?.? 1,1\n"
".#??.???#.?#?#?? 2,1,1,6\n"
"?.#??##??#???????? 1,1,2,4,1,1\n"
"##?.?.##??????#??.?? 2,10\n"
".?????##????.?.??#? 1,6,1,1,2\n"
".##??#?#??##?#??? 2,8,2\n"
"??.?#.??#?.???#??? 1,2,2,5\n"
"?????.?????????#?.? 1,1,3,2,2,1\n"
".#?##???##??.?.# 9,1,1\n"
"??????#???????? 7,2\n"
"#?????.?????#?. 1,2,1,1,1\n"
"?.#?????????#.#?# 1,1,4,1,3\n"
"?.??#??#??#??#.. 1,2,2,1,2\n"
"??.##??????#?????. 1,2,2,1,1,4\n"
"#?.?????#?.?##?? 1,2,2,5\n"
".?#?#?#?.?.# 6,1\n"
"#.????#?#??# 1,6,2\n"
"??.??????? 1,2\n"
"???#?.?..??.??#????. 2,2,4\n"
"??????#??????? 2,2,4,1\n"
"?.????#?..???? 5,1\n"
"???..????.?????? 3,1,3\n"
"???.???#??. 1,1\n"
"?...?#?.??.?#?.? 2,3\n"
"???#..??..#?#??. 4,2,3\n"
"..?????#??? 4,1\n"
"???##?.#???#?? 6,3,1\n"
"????#??.??.. 5,1\n"
"??????#??? 3,2\n"
"??????????#?????? 3,3\n"
"?????.??#??#??? 3,8\n"
"?#?##..?#.?#? 1,2,1,2\n"
"#???##?#????. 10,1\n"
"??????.???#??? 2,2\n"
"?????###??.???. 9,1\n"
"??##???#????.?#??#? 1,2,5,1,1,2\n"
"?.?????#??#.?? 1,5\n"
"?#...???#?#??#?. 1,9\n"
"???.#?????????.???# 3,6,2,1,1\n"
".?#?#????.?? 7,1\n"
"??.#?.#??#??.?? 1,2,1,1,1\n"
"????????##?..? 1,1,5,1\n"
"?????????????.?.?. 3,5,1\n"
"??#?.#?????? 1,1,1,1\n"
"?????????#..??#? 3,6,1,1\n"
".?.??..?.??.?.???.?. 1,2\n"
"????#???.?###...???? 6,4,1,1\n"
"???#?#??#??????..??. 13,2\n"
".##???.?????? 4,2\n"
"??????????? 7,1\n"
".???.#?#?##?.???. 1,6,1,1\n"
"?????.#?.??#???# 3,2,1,2,1\n"
"?????#?#?###??##??# 1,1,1,5,6\n"
"???...?#?.#??#?. 2,2,1,2\n"
".?#???????? 2,1\n"
"?.?##????????? 1,5,1,1\n"
"..??????##?#???.?? 3,8,2\n"
"?????.?.??????#?.?? 1,2,3,1,2,2\n"
"??#..??##?.# 1,3,1\n"
"#?#??..??#.?.?#?.??? 5,3,1,3,1,1\n"
"?????#??#??#? 1,2,1,1\n"
"??.#???#?#???#?..??? 12,1\n"
"??#?#..???#??? 3,1,1,1\n"
"?.??.??.#??#???#?#?? 1,11\n"
"??#.??#??#??.?? 1,5,2\n"
"?#???#?#?#?????.?? 10,1,1,1\n"
"?#???#?????##?. 7,4\n"
"???##??#?#.???.??. 5,1,1,1,1,2\n"
"????.?????#??? 3,1,3,1\n"
".???#?.??#?.????# 3,2,5\n"
"??#?????#????#??#??? 4,2,8\n"
"?????#???.#?#??? 1,3,1,3,1\n"
"?###.???#?????.#? 3,5,1\n"
"#.?##..??.#???. 1,2,1,1,1\n"
"??#?#??????.#?..?.?? 8,1,2,1,1\n"
"????.?????.????#??? 1,1,3,2\n"
"?#?#????#????#??# 6,1,1,1,2\n"
".???#?#???#?#?#????? 15,1\n"
"..???##.??. 1,3,2\n"
".???#.?#??#???? 4,1,2,1\n"
"????????#?#?#??##.? 2,11\n"
"??.?.??????#??. 3,3\n"
"??.???###????##??? 1,10\n"
"#????.?#??.??.??? 5,3,1,1\n"
"?.????????##.? 1,5,2,1\n"
"???#?##??#??. 2,4,2\n"
"?.#??.??#??#?#? 1,1,8\n"
".##???.?#???. 4,1,1\n"
"??#.????.?.#??#? 2,2,1,2,2\n"
"???##????# 1,5,1\n"
"#???????#?..?#??? 4,5,3,1\n"
"??.?????.???? 2,1,1,2\n"
"??.???.?????.???#?? 1,2,2,1,5\n"
"??.??#??#?#?..??. 1,7,1\n"
"?#???#?##?..?.?????? 9,5\n"
"#?##?#????..#? 6,1,1,1\n"
"#????.???. 3,2\n"
"?????##.?..??##????? 6,4\n"
"??????.??.??? 2,2,1,1\n"
"??????#?.??# 1,2,3\n"
"????#?????## 1,1,1,2\n"
"..#????#??#????. 2,2,2\n"
"?#.??.??????? 2,1,1\n"
".#???????#.?#?##.. 1,1,1,1,4\n"
"?????#....?.# 3,1,1\n"
"???????#??.?#?#?? 1,2,3,4\n"
".???#??#?? 3,1\n"
"??#??#???##??.#????? 1,11,1,1,1\n"
"??????#.#? 1,4,2\n"
".???#?.#??.? 1,1,2,1\n"
".?#?#????#.# 9,1\n"
"?#?.##???.?.?#.#?? 3,4,1,2,1,1\n"
"????.???.???..??? 3,2,1,1,1\n"
"#?#??..????.?????# 1,2,2,1,1,1\n"
".??#??.#?#??#???? 1,1,1,6,3\n"
"?#?????????????#??? 2,1,3,9\n"
"?????#.?????? 1,1,1,4\n"
"?.??#???#?.#????. 1,3,2,1,1\n"
"??..#?#?.? 1,4\n"
"????#?????#. 3,1,4\n"
"??.?##??#?###??#???? 1,15\n"
"????.??#?.?..? 3,3,1\n"
"#?.??.??#?####?? 1,1,1,8\n"
"?#????##??????????? 14,2\n"
"?#????.#??.? 1,2,3\n"
"???.##?????#?????? 2,2,1,3,1\n"
".?????????##?.# 1,8,1\n"
"??.???????? 1,2,2\n"
"??????#?#? 2,1,1\n"
"???????.#?? 1,3\n"
"?...?####????.?#?? 1,4,2,1,1\n"
".?##?#??????? 9,1\n"
"????.???????#???#?? 2,9\n"
"?????.?.????? 2,2\n"
"????.?????. 1,1\n"
".?????????###.??.? 11,1,1\n"
"????##?????.?? 1,2,1,1\n"
"???#?.#??##???#?#?.. 4,1,2,5\n"
"???????#??.??. 3,1,1,2\n"
".??????????#??#?? 4,6,3\n"
"??.?????..?.?##?#??? 1,1,2,1,4,1\n"
"??#..??.????? 2,1,1,1\n"
".#??#??.#??#? 1,3,5\n"
".?????##??????.? 3,6,1\n"
"##?.?#..?. 3,1,1\n"
"?.#.??????#?????#?? 1,12\n"
"#??.????.?# 3,1,1\n"
"#.#?#.##??#?..???? 1,1,1,6,1,1\n"
"????#???.???#??.. 3,4\n"
"???????.##??.???? 2,2,4,1\n"
"??#??#?.####???#??? 4,10\n"
".????###???###???? 6,6\n"
"???.??????. 1,3\n"
"??##..?#??#??###? 2,3,1,5\n"
".????#?#????.#? 9,1\n"
"??.???#.#????????? 4,1,2,2\n"
"???#?.????#?# 1,1,4,1\n"
".#?????.#??? 2,1\n"
"??????...???????#??# 5,2,1,5\n"
"#.?????###?????. 1,2,6\n"
"??##..????..?# 3,2,2\n"
"##???????.?#?. 2,2,1,3\n"
"??#?.#.??#.? 1,1,1,1\n"
"??##.??????..?.??. 4,1,1,1,1,1\n"
"??##?#?????????#?#?? 3,8,1,1\n"
"???????#????.????#?. 8,1,1,1,2\n"
"??????????#????#?? 1,2,11\n"
"???#??.??#. 5,2\n"
".??????????# 3,1,2\n"
"??#.?????##?#???. 1,10\n"
"?.#???#?#???#????# 1,1,4,2,1,1\n"
"#????.?#?????#??? 2,2,9\n"
".???#???##? 1,3,3\n"
".??.??#???#? 3,2\n"
"???#???##??#???.??## 14,3\n"
"???##?##??.##?.?.#?? 2,6,3,1,1\n"
"???###????#???? 6,6\n"
"??.?.?#?##?##?#???? 1,1,1,5,5\n"
"?#???..?.???#?#.?? 5,1,4,1\n"
"#?????#????#???#??? 4,1,1,1,5\n"
"??#.???#????#???? 1,5,1,2\n"
".??#?#???? 5,1\n"
"?.???..#???#?? 1,2,5,1\n"
"???#?##????..???##? 7,4\n"
"??..#?.???? 2,2,2\n"
"?.??#?.##?????#? 4,5,2\n"
"?.?##???##??##?#?. 9,4\n"
"??#?#??..#??????? 6,4\n"
"???#??.??.? 4,1\n"
"?..#?#?#?????????#? 1,6,1,2\n"
"???.#?..?? 1,2\n"
"??????????.?.#?. 4,2,1,1,1\n"
"#..??.???###?.?.? 1,1,6,1,1\n"
"??.?????#?#??#.?? 1,1,6,2\n"
"?.?##???#?? 3,2\n"
"??.???????? 1,5,1\n"
"?.#???#????#??## 1,1,5,1,2\n"
"???????????###??? 2,1,8\n"
"???.????.?# 2,1,2\n"
".#?.??#????#.?????? 1,1,1,4,1,1\n"
"#???###?##?.??...? 10,2,1\n"
"..#.??????.?# 1,1,4,1\n"
"????#?????#.? 1,5,1,1\n"
"???#??#??#??# 2,1,2,2\n"
"?#??????????#? 1,1,3,1\n"
"??#??#??#?#?? 3,1,4\n"
"???.?????????#. 1,1,1,2,1\n"
"#??##??.?#? 5,1,1\n"
"..?##???#?#???? 2,6\n"
"#??????#?.?? 2,1,2,1\n"
".###???.??###??#?? 5,10\n"
"?.????..?????#??? 4,3,2,1\n"
"???##??????? 1,3,1,2\n"
"????.?.####??####??? 1,11\n"
"??##???.?? 4,1\n"
"??#?.?????# 1,3,1\n"
"??.???...#..?. 1,3,1,1\n"
".##?#??#?#??#??#??? 2,1,5,1,4\n"
"?#.????#??????????## 1,1,2,10\n"
".#?.??#???? 2,5\n"
"?#?.#?????.??.? 3,4,2,1\n"
".#?????.?..?? 6,1,1\n"
"###????????###? 6,3,3\n"
"#??????.??#?#? 4,1,6\n"
"??????#?????? 1,2,1\n"
".?#.???#??????????#? 2,1,2,1,2,2\n"
".????#?????????? 5,5\n"
".??????????. 5,1\n"
"?????????.?#?? 2,5,1\n"
".?#??.?.?? 2,1,2\n"
"?.#.?#?#?. 1,4\n"
"??##.??##?#??###?? 3,5,3,1\n"
".????..??#?.? 1,1,4\n"
".???#?????# 1,3,3\n"
"??????.?????##???.? 6,7\n"
"???#?###?.??#?##??# 6,9\n"
"##???#?.#?..#?????. 6,2,3,1\n"
"???????#?#????#.?.?# 3,11,1,1\n"
"?#?.??#??#? 2,3,2\n"
"???#?????.?? 7,1,1\n"
"?.???????#?#??.?.#? 4,2,3,2\n"
".#.?#.??#??????? 1,1,1,5,1\n"
"?.##??????????? 7,1\n"
"?.?#????????.? 6,1\n"
".##??#?.???? 2,1,3\n"
"#?.#?#?#????.? 1,1,6\n"
"?##???#??#.???.? 6,1,1,1\n"
"???????#?? 2,1,1\n"
"..?#????#???#?? 1,1,3,4\n"
".?.#??##?#.?#??..#? 1,1,5,1,1,1\n"
"?#?##?#????. 6,1,1\n"
"#?#?????#?##???#?#?# 1,4,12\n"
".????#???? 1,2,1\n"
"?..??.???. 1,1\n"
".????????????.???? 4,1,1,1,1,1\n"
"??.??##???.?#?? 2,4,1,2\n"
"?????#.##???#??#?.? 1,3,4,1,1,1\n"
"??#?.?#??##. 1,2,6\n"
".???.??#?#.#????##.? 2,3,1,7\n"
".?.????????. 3,3\n"
"?????#.?.#...? 2,2,1,1\n"
"??????.##????..?. 3,4\n"
"?#.??????#???### 1,1,9\n"
"??..???#.??##????#?# 2,1,1,10\n"
"?????#?..#?. 3,2,1\n"
"???????..?# 2,1,1\n"
"???#???#?? 1,3,2\n"
".#?#??.?????????.? 5,1,1,1,1\n"
"?.#?.?.??????# 2,6\n"
"???#.??????? 1,1,1,3\n"
"?#???#?????.#?? 3,5,2\n"
"???#???????.?? 1,6,1,1\n"
"..?#????#.. 1,4\n"
"?????.???# 1,1,3\n"
"??#.?????????..? 1,1,1,5,1\n"
"??##??...??#??? 6,3\n"
"#??#????#? 2,2,1\n"
"?#???##.##???? 6,2\n"
"?.?#????.?#?.????# 1,3,1,3,1,3\n"
"??.##??#?????????.. 1,8,1,1\n"
"?###?##.?????#?.???# 4,2,1,4,3\n"
"???.???????.#.??? 2,1,3,1,2\n"
"??.???#????. 1,4,1\n"
".?##?????##???.???? 13,2\n"
"??##.???????#??#??#? 2,1,2,5,2\n"
"#??????##???. 2,1,3,2\n"
"#.???????? 1,1,1\n"
"?#?.#.?#??.??????? 1,1,4,1,3\n"
"?????#??#??? 2,5\n"
"??.??#?#?? 2,5\n"
"?.#?#?#?????????. 1,9,2,1\n"
"??#??.?##.??#.??? 1,3,1,1,3\n"
"???????.?????? 4,6\n"
"#?.?#??#?????.??? 2,9,1\n"
"#??#??#?.??#????# 5,2,4,1\n"
"?#.#?#?.?? 1,4\n"
".?.?.????#??#?? 1,1,1,2,2\n"
"?.#???????#?.?. 1,1,3,1\n"
"#.??????..?.?. 1,4,1,1\n"
"???????.#???#??.? 7,6,1\n"
"?..##???##???? 3,3\n"
"?????###?#..???#.?#? 1,1,5,1,1,1\n"
"??.????#?.?..# 2,2,1,1\n"
"????#???##??#? 6,5\n"
"#?????##??????? 1,1,3,1,4\n"
"#?.?????#?.?? 1,2,1,1\n"
"??..#?#??##? 1,3,3\n"
"???#??#???#??. 4,1,1\n"
"???.#??##???????? 3,6,1,1,1\n"
"#?###?#?##?.#?.?.?.. 1,9,1,1,1\n"
"?#???#??#?.?.#???? 1,4,1,4\n"
"????..#.?.???#??.? 2,1,1,4,1\n"
"?????##??#.??#?.# 9,2,1\n"
"????.?##??#?????..?. 2,3,1\n"
"??????.#?#???#??.??# 4,8,3\n"
"?#?##?#????????#?? 7,1,3\n"
"?#??###??#?#?#?.? 13,1\n"
"?.??##???.??????#.? 1,6,1,2,1,1\n"
"??#??#????? 3,3,1\n"
"??.??????????#.. 5,5\n"
"????????#?? 2,6\n"
"#?.??#???.#??? 1,6,1,1\n"
"##.?????#?. 2,2,1\n"
"????#??.?#???? 4,1,5\n"
".?????????????##?.? 5,3\n"
".?.???.?#??.## 2,1,2\n"
".?????????###????? 3,5\n"
".###??.##?? 5,3\n"
"?#??????#?.??#???? 5,3,3\n"
".????#??????? 1,2\n"
"??#??????..#???#?. 3,1,5\n"
".???#?#?.???.?????? 6,3,2,2\n"
"??.#??.???. 3,2\n"
"?.??.???#.?? 1,4,1\n"
".?????.???..#?? 1,1,1,1,3\n"
"#????????? 4,2\n"
"????#?...????????#?# 1,2,1,9\n"
"??#?#####???? 2,5,1\n"
".??#???#?. 3,2\n"
"?#?#?.##????#?????? 1,1,9,2\n"
"?####?????.?.???? 8,2\n"
"#???#??.??.??? 2,3,1,3\n"
".#??##?????#.#?? 7,1,1,1,1\n"
"?..????.???###????. 1,7\n"
"???##???#???.??#?#? 9,1,6\n"
"???#?????????. 3,5\n"
"#?#??#??#?. 3,5\n"
"?#??.?.???? 3,1\n"
"???###.?#.. 3,2\n"
"?????????.??? 4,1,1,2\n"
"???#??#??.? 8,1\n"
"#..??.#???? 1,5\n"
"????#??###?#?#?#???? 2,1,6,7\n"
"???????????###????. 13,1\n"
"???####?.? 1,4,1\n"
"?##.???#????##?##?? 2,1,9\n"
"???..??..?.#?#??#.. 3,2,6\n"
".#?#???.?#?##??? 1,1,1,6,1\n"
"??#?..??????#??? 1,6,1\n"
"#.????#??????# 1,8\n"
"???#??..?? 1,1\n"
"???..????????? 1,1,4,1\n"
".????.#???. 1,1\n"
"#???#?#?#?.??.#?? 9,2\n"
"#??#?##????.??.?? 10,1\n"
".?#?.?????##????#? 2,11\n"
"????#??.#???#?????? 1,4,1,3,1,1\n"
".?.??..???#?? 1,2,5\n"
".#?????.?.???#?#??#? 1,4,2,1,1,1\n"
"??#????#??#???#.??? 1,1,10,1,1\n"
".???..#??#???.. 2,7\n"
"??.#???.#?????? 1,2,1,5\n"
"????#??.??????#? 1,3,1,3,2\n"
"##?????##..???.???.? 2,6,3,1,1\n"
"??##???.??????#?? 7,4,1\n"
"#..##.??#???#??? 1,2,1,1,3\n"
"#??.?##...?? 1,3\n"
"??##?...###... 5,3\n"
"#?#??#????#??#..#? 11,2,1\n"
"???#?????#?#???#??.? 4,8\n"
"??.??????#????????? 9,1\n"
"??.??.?????# 1,1,5\n"
"???.??????#??? 1,1,3,1\n"
".?.#???.???#?????? 2,7\n"
"???##??.?#?###? 2,2,1,2,3\n"
"???????#.??.#????#.? 1,4,1,1,2,1\n"
".???#.????#.?????? 1,1,5,2,1\n"
"?.?.???###?##???? 1,10\n"
"?????.?#?.? 5,1\n"
"????????##.?? 3,5,1\n"
".???#??##?####??? 1,6,4\n"
"#?????????#?. 3,4\n"
".?.??#?.??.???.? 1,1\n"
".???#?????? 4,1,1\n"
"???#?#?..?...#???.. 4,1,1,1\n"
"?????.????##???? 1,1,1,1,6\n"
"??#..????? 1,1\n"
"?#?.?????#??#..?#. 2,2,2,2,2\n"
"????#..????? 4,3\n"
"??????????#.?. 2,4,1\n"
"??..#?????..?.#???? 1,6,1,1,1\n"
"??#?####????? 10,1\n"
"?#???#.?..?? 3,1,1\n"
"?????#????????????? 5,4,2\n"
"##??.??..?.?? 2,1\n"
".?#?#??.??####???? 6,8\n"
"##?.??#???#?#???. 3,4,3\n"
"?#.?#...?#.???.# 1,1,2,2,1\n"
"?#..????#??? 2,2,3,1\n"
"??#??????? 2,1\n"
"????..?.????#?# 3,1,1,3\n"
"?????.??.????#???#?? 1,1,1,1,2,7\n"
".?##??.?#?.? 4,2\n"
"????#??.??. 5,1,1\n"
"??????.??? 5,2\n"
"????????#?#? 2,1,4\n"
"??.?????????#??.#?? 2,5,4,1\n"
"??.??????????? 1,4,1,1\n"
"???#????.? 2,4,1\n"
"??????.?#?# 1,2,3\n"
"#???????#?. 1,4,1\n"
"????#.??#???.???.? 5,1,1,1,2,1\n"
"?#?????.??##?? 1,1,2,3\n"
"?...???????? 1,1,3\n"
".##????#.?#?? 3,2,1\n"
"#??#?.?.#??##.????? 5,1,5,1,1\n"
".???#????? 6,1\n"
"?#???????.?###??#. 2,1,1,4,1\n"
"#??????.???????? 5,1,1,1,3\n"
".?#??###?#?#?##?..?? 15,2\n"
".?.??#?######?.??.?? 1,10,2\n"
"??#???.#??#?????# 5,8,1\n"
"????.????? 4,3\n"
"??#.???.??? 1,1,3\n"
".????.##??????#?##? 4,2,2,4\n"
"??#??????###????#?.? 4,1,10,1\n"
"????#..???? 4,2\n"
"#?????????#???????.# 1,2,1,1,3,1\n"
"?#??##???.#?#.? 8,3,1\n"
"????.#?#???#### 1,1,1,3,4\n"
"??.?#?#?#?.??. 1,1,4,1\n"
"??#??????????.# 2,4,1\n"
"???#??.???##??#? 6,1,2,3\n"
"?.???#?#??#??##?.?.. 14,1\n"
"??.#??#?#??? 4,3\n"
"?#?.??????#??????#? 2,15\n"
"???.???#??.???#??. 1,2,3,5\n"
"?#?.?#?#?#?#???#???? 2,4,1,1,5,1\n"
"???????????#???. 1,1,6\n"
"??????????.?? 2,5,1\n"
".##???????.?#???? 9,3\n"
".???..?.?###? 2,1,3\n"
"?#??##??????????. 10,1\n"
"?????.????.?##?? 4,1,4\n"
".???##?.???????#? 1,2,1,6\n"
"????????????.?? 5,1,2\n"
".?#????????? 3,1,3\n"
"#?.?#?.??. 2,1\n"
"?#?#????????. 7,1\n"
"??????####???????#? 2,10,1\n"
"?.???..????? 1,4\n"
".????##??#?##? 2,9\n"
"#??#?#?#??.#.#?? 9,1,2\n"
"?#??.?###???????? 1,1,6,2,1\n"
"?###??????.?# 4,2,1\n"
"#.??#??.?##?#. 1,4,5\n"
"?????.????????? 1,1,5,2\n"
"??.?#..#?????#?? 1,2,3,5\n"
"?.??#????.?????#?# 6,8\n"
"?.??#.?##?????? 1,2,6,1\n"
"#??#.?.?.#?#?????#?# 1,1,1,1,1,9\n"
".????#??##?????#??? 9,5\n"
"?#????#?##.????? 7,2,1,1\n"
"?.??????.??? 1,1,2,1\n"
"??##???#?##?? 4,5,1\n"
"#??????####?.???? 1,8,1,1\n"
"?.#?###?????#?#? 5,4\n"
"?.??#.???.#.#?#. 1,2,1,1,3\n"
"#.#?#?##??##?.??.. 1,10,2\n"
"???????#?????#??? 3,2,1,1,5\n"
".?.#??.?#?#?.?#???? 1,1,4,2,2\n"
"??##???.???# 6,1,1\n"
"?#??..???#?#???#.??? 1,1,2,5,1,1\n"
"##?.??#???#??###? 2,3,2,5\n"
"?.???#???#?#?#???#? 1,1,1,1,9\n"
"?#??#??#??.?.#?. 2,2,2,1,2\n"
"????#??.?##? 4,3\n"
"?.?#???..?####???? 1,2,1,7,1\n"
"#???????.? 1,2,1\n"
"#?..???..??????? 1,1,1,1\n"
".#??#?????? 1,6,1\n"
".#?.?.???##?? 1,1,5\n"
"??#????.###?##??? 2,2,3,2,2\n"
"?#?.?.???. 2,1\n"
".??..???????.????? 2,3,1,1,1,1\n"
".??.#???.???? 3,2\n"
"...?.??#???.. 1,1\n"
".??.?.?????????#??? 1,3,2,5\n"
"?.???..?#.#????# 1,2,1,6\n"
".?#???.??#?????. 4,5\n"
"?##?.???..#? 3,3,2\n"
".##???#?#?.?#??.??? 3,4,3,2\n"
".????#??.?? 4,1\n"
"?##??#?###???#???#?? 2,5,1,5,1\n"
"??#??.?.##??? 1,2\n"
"..#????#??#?? 1,2,1,3\n"
"??????##?. 2,3\n"
".????????.?#????? 1,6,1,2\n"
"??.?#????.#??#?. 1,2,2,1,1\n"
".?#?????????.#?# 2,5,1,1,1\n"
"???????.???????#?#? 2,10\n"
"?#?#?.#.?????#? 3,1,2,2\n"
"???????#?????????? 3,1,4,2\n"
"?.?.??????? 1,3,1\n"
"????.#???#?.##.?? 1,1,5,2\n"
"????..#????.????? 3,1,1,1,2\n"
"????#?.#???#?? 6,6\n"
"?.?#???.??.??### 1,2,1,1,3\n"
"..##?.??#?.?#?.#?. 3,1,2,2,2\n"
".?##?#??.? 2,1,1\n"
"?#???##?????. 6,1\n"
"???#?#???#?#?#???? 2,3,7,2\n"
".#?#?..####?? 1,1,6\n"
"#???#??#????? 2,9\n"
"?..?#??????#???.?#? 1,1,8,2\n"
"?.#???#??? 1,1,4\n"
"..???##???#?#?.#??. 11,2\n"
"????##????. 1,6\n"
"??????#??.?????. 1,1,1,2,2\n"
"?#?##???????#.?#? 13,2\n"
"?????????# 2,2\n"
"##???????. 5,3\n"
"????????##??# 2,5,1\n"
"???#?#?##???#?#??#? 8,1,1,4\n"
"?.????????. 6,1\n"
"???????#.??#?#??# 4,3,7\n"
"#####????#?????????. 10,1,1,1\n"
"#??????#?#.?????? 1,6,1,2\n"
".??.??????????#?# 4,3\n"
".???..#??. 1,3\n"
"???.?????? 1,1,2\n"
"#?.??#???.??? 1,3,1,1\n"
"???????.???.. 1,2\n"
".##???#?.#???#?#?# 2,2,9\n"
".?#???.?.? 1,1\n"
"?#?#????#?#.??#? 4,3,1,4\n"
".?????.?????????# 4,1,6,1\n"
"????.???#?#??###? 4,1,5,3\n"
"??#????????#??#?..# 3,1,1,3,1,1\n"
".?????.?????????.# 1,1,1,1,5,1\n"
"..?????????#???.??? 5,5,1\n"
"??#????#?? 1,1,1\n"
"????#?#?????? 1,1,4,1\n"
"???#??#??.?#?? 7,2\n"
"????.#??.?.##? 1,1,1,3\n"
"??.#???.??? 1,2,1\n"
"#?????##?#????? 11,1\n"
"?...??#??. 1,5\n"
"?????#?#?.???# 1,1,3,4\n"
"??.??##.####????.# 2,1,2,7,1\n"
"??#????..? 5,1\n"
"????#??#???#??#?##? 3,2,7\n"
".???##????.##?##?. 5,5\n"
"??#??#??#?#? 1,9\n"
"??#?#??#??.#???#???? 10,5,2\n"
".??.?????#? 2,1,2\n"
"???#.??#?#??#? 1,1,9\n"
"??#?????..???# 7,4\n"
"..#??.?###???#?#.? 3,9\n"
"???#?????##?.????# 3,4,5\n"
"#??#?#???# 1,4,2\n"
"??#??#???#?.#?#??? 1,1,6,1,1,1\n"
"??#????.???#.#? 2,2,1,1,2\n"
"##?#?????#?.????#?? 6,3,5\n"
"????#?.?????? 3,3\n"
"??#.???.?.#????#???? 2,1,2,7\n"
"??#?#???.???? 8,1\n"
"#.?#.?#????.???. 1,1,3,1,3\n"
"##???#????.?..?.??? 10,1,1,1,1\n"
"????#??#?????? 1,7,3\n"
"???.?.??.??? 2,1,1,1\n"
"?#?###?????.?#?#?.?? 9,1,1,1,1\n"
"???###?##???.#? 1,4,2,1,1\n"
"????###?????#?.? 1,11,1\n"
"????#??..??##??? 5,1,3\n"
".????##??????..##. 12,2\n"
"?.#????#?? 2,2\n"
"????????#?#????#??.? 2,4,3\n"
"????.#???.??#?#. 4,3,5\n"
"??##????.#?.?#. 7,1,1\n"
".?.??.??..? 1,2\n"
"##???.#?.? 2,2,2\n"
".?????#?.??#.? 4,2,1\n"
"..##??#??#? 2,2,2\n"
"??..?.?.??..?. 1,1\n"
"???.?.?..???#?#?? 1,1,8\n"
"???##?#???#????? 1,3,2,2,1\n"
"?.?????#?????#??.??? 1,1,2,6,2\n"
"?????.#?????#?#???. 1,1,9,2\n"
"?#?.????.???????## 1,4,1,1,1,2\n"
".?.?##??.### 2,3\n"
"??????##???# 2,4,2\n"
".?#.#.?#????..#.?? 2,1,1,3,1,1\n"
"?.#???..??????.? 2,3\n"
"#..#??????????? 1,1,3,5\n"
"??.??.???.?...? 1,2\n"
".?.#???#?#. 1,4\n"
"#??..??#.?#? 1,1,1,3\n"
"?.?##??.#.?? 4,1\n"
"???????.#??? 1,2,1,1\n"
".????#??.?. 2,3,1\n"
"????.?#???? 2,3,1\n"
"???#???.?#?????? 1,4,2,2,1\n"
".#?????..???????.? 6,7\n"
;

using Coord = size_t;

struct Point{
    Coord x;
    Coord y;
};
bool operator==(const Point p1, const Point p2){
    return (p1.x == p2.x) && (p1.y == p2.y);
}
/*bool operator!=(const Point p1, const Point p2){
    return !(p1 == p2);
}*/

} // namespace

auto day12Part1(std::string_view streamSource, bool sourceIsFilePath)
{
    std::shared_ptr<std::istream> inputStream;

    if (sourceIsFilePath) {
        inputStream = std::static_pointer_cast<std::istream>(
            std::make_shared<std::ifstream>(std::string(streamSource)));
    } else {
        auto sstream = std::make_shared<std::stringstream>();
        (*sstream) << streamSource;
        // use std::move(sstream) in C++20 or more.
        inputStream = std::static_pointer_cast<std::istream>(sstream);
    }

    using Length = unsigned long;

    using CombCount = unsigned long;

    CombCount res = 0U;

    unsigned lineCount{0U};

    constexpr auto MaxLineLength = 1000;
    std::array<char, MaxLineLength + 1> cc{};
    while (inputStream->getline(cc.data(), MaxLineLength, '\n')) {
        ++lineCount;
        std::string errorLine = "Input error at the line n. "
            + std::to_string(static_cast<int>(lineCount)) + " : ";

        auto c = static_cast<size_t>(inputStream->gcount());
        // 'c' includes the delimiter, which is replaced by '\0'.
        if (c > MaxLineLength) {
            throw std::invalid_argument(
                errorLine + "longer than " + std::to_string(MaxLineLength));
        }

        std::string line;
        // std::cout << "length = " << c << '\n';
        if (cc.at(c - 1U) == '\0') { // 'c' is positive as line has been extracted.
            --c; // excludes '\0' that replaced the delimiter '\n'.
        }
        line = std::string_view(cc.data(), c);
        // std::cout << "line: " << line << '\n';

        // std::stringstream lineStream;
        // lineStream << line;

        std::vector<Length> groupsLen;
        std::list<std::string> groupsChar;
        groupsChar.emplace_back("");

        Length groupSize = 0U;
        bool readingNewGroupSize = false;
        bool foundGroups = false;
        for (auto ch : line) {
            bool digit = std::isdigit(ch);
            if (ch != ',') {
                if (foundGroups && !digit) {
                    if (!std::isdigit(ch)) {
                        throw std::invalid_argument(
                            errorLine + "not a digit nor comma after numbers started "
                            + std::string(1U, ch));
                    }
                }
            }

            switch (ch) {
            case '.':
                if (!groupsChar.back().empty()) {
                    // std::cout << "ended group : '" << groupsChar.back() << "'\n";
                    groupsChar.emplace_back("");
                }
                break;
            case '#':
                [[fallthrough]];
            case '?':
                groupsChar.back().append(std::string(1U, ch));
                break;
            case ' ':
                foundGroups = true;
                break;
            case ',':
                if (groupSize == 0U) {
                    if (readingNewGroupSize) {
                        throw std::invalid_argument(errorLine + "comma ending a zero-value");
                    } // else
                    throw std::invalid_argument(
                        errorLine + "unexpected comma before number starting");
                }
                groupsLen.push_back(groupSize);
                groupSize = 0U;
                readingNewGroupSize = false;
                break;
            default:
                // must be a digit
                if (!digit) {
                    throw std::invalid_argument(
                        errorLine + "unexpected char " + std::string(1U, ch));
                } // else:

                constexpr Length BaseTen = 10U;
                groupSize *= BaseTen;
                groupSize += static_cast<Length>(ch - '0');
                readingNewGroupSize = true;
            }
        }

        if (groupsChar.back().empty()) {
            groupsChar.pop_back();
        } else {
            // std::cout << "ended group : '" << groupsChar.back() << "'\n";
        }
        if (readingNewGroupSize) {
            if (groupSize == 0U) {
                throw std::invalid_argument(errorLine + "comma ending a zero-value");
            }
            groupsLen.push_back(groupSize);
        }

        // TODO: work with numbers instead of changing strings.

        // Find combinations count:

        // recursive call
        // NOLINTNEXTLINE(readability-identifier-naming)
        const auto LenCount = groupsLen.size();

        using ItGroups = decltype(groupsChar.begin());
        // unsigned step = 0U;

        std::function<CombCount(size_t, ItGroups, size_t)> combCounting;
        combCounting = [LenCount, &groupsChar, &groupsLen, &combCounting /*, &step*/](
                            size_t lenIndex, ItGroups grIt, size_t chIndex) {
            /*
            std::cout << "called with lenIndex = " << lenIndex << " ; "
                        << "grIndex = " << std::distance(groupsChar.begin(), grIt) << " ; "
                        << "chIndex = " << chIndex << " ; "
                        << "residual group = "
                        << ((chIndex == grIt->size()) ? "empty"
                                                    : grIt->substr(chIndex, grIt->size()))
                        << " ; residual length = " << groupsLen[lenIndex] << '\n';
            std::cout << "step " << ++step << "  ";
            for (const auto& gr : groupsChar) {
                std::cout << gr << ", ";
            }
            std::cout << "\n";
            */

            CombCount resPartial = 0U;

            if (chIndex >= grIt->size()) {
                if (groupsLen[lenIndex] > 0U) {
                    // no match with the expected length
                    // std::cout << "no match with expected length\n";
                    return resPartial;
                } // else:

                // Move to next length and group.
                ++lenIndex;
                ++grIt;

                if (lenIndex < LenCount) {
                    if (grIt != groupsChar.end()) {
                        // std::cout << "Found a single match, continue next length\n";
                        resPartial += combCounting(lenIndex, grIt, 0U);
                    } else {
                        // std::cout << "Found a single match but only groups ended (and lengths
                        // "
                        //              "are positive)\n";
                        return resPartial;
                    }
                } else {
                    // One single solution (only) if ended groups
                    // or all groups with '?' only.
                    bool foundMatch = true;
                    while (grIt != groupsChar.end()) {
                        if (grIt->find('#') != std::string::npos) {
                            foundMatch = false;
                            break;
                        }
                        ++grIt;
                    }

                    if (foundMatch) {
                        ++resPartial;
                        // std::cout << "Found a full match\n";
                    } else {
                        // std::cout << "no possible match in recursive call\n";
                    }
                }

                return resPartial;
            } // else:
            // search next char:
            switch ((*grIt)[chIndex]) {
            case '#':
                if (groupsLen[lenIndex] == 0U) {
                    // std::cout << "# does not match 0 residual length\n";
                    return resPartial;
                } // else:

                groupsLen[lenIndex]--;
                ++chIndex;
                resPartial += combCounting(lenIndex, grIt, chIndex);
                groupsLen[lenIndex]++; // restore

                return resPartial;

            case '?':
                // Try two alternatives:
                (*grIt)[chIndex] = '#';
                resPartial += combCounting(lenIndex, grIt, chIndex);

                // second alternative: break in two the group
                if (chIndex + 1U == grIt->size()) {
                    // no break
                    // std::cout << "shorten group\n";
                    grIt->resize(chIndex);
                    bool movedOn = false;
                    if (chIndex == 0U) {
                        if (groupsChar.end() == ++grIt) {
                            --grIt;
                        } else {
                            movedOn = true;
                        }
                    }
                    resPartial += combCounting(lenIndex, grIt, chIndex);
                    if (movedOn) {
                        --grIt;
                    }
                    grIt->resize(chIndex + 1U); // restore
                } else {
                    std::string newGroup;

                    newGroup = grIt->substr(chIndex + 1U, grIt->size() - chIndex - 1U);
                    grIt->resize(chIndex);
                    // std::cout << "break in two: new in position "
                    //           << (std::distance(grIt, groupsChar.begin()) + 1U) << " is "
                    //           << newGroup << '\n';

                    ++grIt;
                    groupsChar.insert(grIt, newGroup); // before grIt
                    --grIt;
                    --grIt; // returns to the current string
                    // In recursive call, chIndex will be higher than current group size

                    bool movedOn = false;
                    if (chIndex == 0U) {
                        if (groupsChar.end() == ++grIt) {
                            --grIt;
                        } else {
                            movedOn = true;
                        }
                    }
                    resPartial += combCounting(lenIndex, grIt, chIndex);
                    if (movedOn) {
                        --grIt;
                    }

                    // restore
                    ++grIt; // moves to the new one
                    // std::cout << "restore removing " << *grIt << '\n';
                    grIt = groupsChar.erase(grIt);
                    --grIt; // back to the current one

                    grIt->resize(chIndex + 1U);
                    grIt->append(newGroup);
                }

                (*grIt)[chIndex] = '?'; // restore
                return resPartial;
            }

            return resPartial;
        };

        CombCount combCount = combCounting(0U, groupsChar.begin(), 0U);

        // std::cout << "Combination count for line " << lineCount << " = " << combCount <<
        // "\n\n";

        res += combCount;
    }

    std::cout << "Lines count " << lineCount << std::endl;
    std::cout << "\nResult: " << res << std::endl;

    return res;
}

int main()
{
    try {
        day12Part1(Input, false);
        // day12Part1("./12_input_file.txt",true);
    } catch (std::invalid_argument& ex) {
        std::cout << std::endl; // in order to flash
        std::cerr << "Bad input: " << ex.what() << std::endl;
        return 1;
    } catch (std::exception& ex) {
        std::cout << std::endl; // in order to flash
        std::cerr << "Error: " << ex.what() << std::endl;
        return 1;
    } catch (...) {
        std::cout << std::endl; // in order to flash
        std::cerr << "Unknown error: " << std::endl;
        return 1;
    }

    return 0;
}


/*
OUTPUT:

Example:
Lines count 21
nResult: 2

Real input:
Lines count 1000
nResult: 7541
*/
